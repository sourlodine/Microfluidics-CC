ifneq ("$(force_host)","")
HOST=$(force_host)
else
HOSTRAW=$(shell hostname)
HOST=$(shell echo $(HOSTRAW) | perl -pe 's/daint\d*/daint/') # Remove trailing digits after 'daint' : 'daint101' ==> 'daint'
endif

include $(UDEVICEX_PATH)/makefiles/Makefile.settings.$(HOST)

# Compiling parameters
CXXFLAGS += -std=c++11 -g -I$(UDEVICEX_PATH)/ $(HDF5_INC) $(INCLUDES)
CXX_RELEASE_FLAGS = $(CXXFLAGS) -O3 $(FMATH_FLAG)
CXX_DEBUG_FLAGS = $(CXXFLAGS) -G

# Linking parameters
LIBS += $(HDF5_LIB)
LDFLAGS += -g
LINK_RELEASE_FLAGS += $(LDFLAGS) -O3
LINK_DEBUG_FLAGS += $(LDFLAGS) -O0

# Misc
SRC_DIR = $(UDEVICEX_PATH)/core $(UDEVICEX_PATH)/core/bouncers $(UDEVICEX_PATH)/core/initial_conditions \
	$(UDEVICEX_PATH)/core/integrators $(UDEVICEX_PATH)/core/interactions $(UDEVICEX_PATH)/core/mpi \
	$(UDEVICEX_PATH)/core/pvs $(UDEVICEX_PATH)/core/walls $(UDEVICEX_PATH)/core/walls/stationary_walls \
	$(UDEVICEX_PATH)/core/xml $(UDEVICEX_PATH)/core/object_belonging $(UDEVICEX_PATH)/plugins $(UDEVICEX_PATH)/core/utils \
	$(UDEVICEX_PATH)/core/parser ./

BIN_DIR = bin
DEBUG_DIR = debug

VPATH = $(addsuffix :,$(SRC_DIR))

# Release binary
$(binary): $(addprefix $(BIN_DIR)/,$(objects))
	$(LD) $(LINK_RELEASE_FLAGS) $^ $(LIBS) -o $@

$(BIN_DIR)/%.d: %.cu
	@mkdir -p $(BIN_DIR)
	$(CXX) $(CXX_RELEASE_FLAGS) -M $< > $(patsubst %.d,%.TMPd,$@)
	@printf "$(BIN_DIR)/" | cat - $(patsubst %.d,%.TMPd,$@)  > $@ && rm $(patsubst %.d,%.TMPd,$@)
	@#| perl -n -e ' if (/\s+\./) { s/(\s+)\./$$1..\/./; } print; '
	
$(BIN_DIR)/%.o: %.cu
	$(CXX) $(CXX_RELEASE_FLAGS) -c $< -o $@
	
clean_release:
	rm -f $(BIN_DIR)/*
	@test -e $(BIN_DIR) && rmdir -p $(BIN_DIR); true
	rm -f $(binary)


# Debug binary
$(binary)_debug: $(addprefix $(DEBUG_DIR)/,$(objects))
	$(LD) $(LINK_DEBUG_FLAGS) $^ $(LIBS) -o $@

$(DEBUG_DIR)/%.d: %.cu
	@mkdir -p $(DEBUG_DIR)
	$(CXX) $(CXX_DEBUG_FLAGS) -M $< > $(patsubst %.d,%.TMPd,$@)
	@printf "$(DEBUG_DIR)/" | cat - $(patsubst %.d,%.TMPd,$@)  > $@ && rm $(patsubst %.d,%.TMPd,$@)
	@#| perl -n -e ' if (/\s+\./) { s/(\s+)\./$$1..\/./; } print; '
	
$(DEBUG_DIR)/%.o: %.cu
	$(CXX) $(CXX_DEBUG_FLAGS) -c $< -o $@

clean_debug:
	rm -f $(DEBUG_DIR)/*
	@test -e $(DEBUG_DIR) && rmdir -p $(DEBUG_DIR); true
	rm -f $(binary)_debug
	
	

clean: clean_release clean_debug

release: $(binary)

debug: $(binary)_debug
	
.PHONY: clean clean_release clean_debug release debug default


ifeq (,$(findstring clean,$(MAKECMDGOALS)))
ifeq (,$(findstring debug,$(MAKECMDGOALS)))
-include $(patsubst %.o,$(BIN_DIR)/%.d,  $(notdir $(objects)))
else
-include $(patsubst %.o,$(DEBUG_DIR)/%.d,$(notdir $(objects)))
endif
endif






