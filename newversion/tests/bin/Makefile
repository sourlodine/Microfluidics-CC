NVCC = nvcc
NVCCFLAGS = -std=c++11 -arch=compute_61 -code=sm_61 -O3 -g -lineinfo --expt-extended-lambda -Xcompiler " -fopenmp"
#-O0 -G -Xptxas -O0

LIBS = -lmpi

SRC_DIR = ../../core/ ../
VPATH = $(SRC_DIR)
NVCCFLAGS += $(addprefix -I,$(SRC_DIR))

wall_obj = scan.o celllist.o halo_exchanger.o dpd.o test_wall.o redistributor.o wall.o
onerank_obj = scan.o celllist.o halo_exchanger.o dpd.o test_onerank.o redistributor.o
manyranks_obj = scan.o celllist.o halo_exchanger.o dpd.o test_manyranks.o redistributor.o
halo_obj    = scan.o celllist.o halo_exchanger.o test_halo.o
redist_obj  = scan.o celllist.o redistributor.o test_redist.o
log_obj     = test_logger.o
cells_obj   = scan.o celllist.o test_cells.o
dpd_obj     = scan.o celllist.o dpd.o test_dpd.o
parse_obj   = test_parse.o


default:
	@echo "Please specify a target!"
	
test_wall: $(wall_obj)
	$(NVCC) $(NVCCFLAGS) $(LIBS) $^ -o $@

test_cells: $(cells_obj)
	$(NVCC) $(NVCCFLAGS) $(LIBS) $^ -o $@

test_logger: $(log_obj)
	$(NVCC) $(NVCCFLAGS) $(LIBS) $^ -o $@

test_onerank: $(onerank_obj)
	$(NVCC) $(NVCCFLAGS) $(LIBS) $^ -o $@
	
test_manyranks: $(manyranks_obj)
	$(NVCC) $(NVCCFLAGS) $(LIBS) $^ -o $@
	
test_halo: $(halo_obj)
	$(NVCC) $(NVCCFLAGS) $(LIBS) $^ -o $@
	
test_redist: $(redist_obj)
	$(NVCC) $(NVCCFLAGS) $(LIBS) $^ -o $@
	
test_dpd: $(dpd_obj)
	$(NVCC) $(NVCCFLAGS) $(LIBS) $^ -o $@
	
test_parse: $(parse_obj)
	$(NVCC) $(NVCCFLAGS) $(LIBS) $^ -o $@

%.d: %.cu
	@$(NVCC) $(NVCCFLAGS) -M $< > $(patsubst %.d,%.TMPd,$@)
	@mv $(patsubst %.d,%.TMPd,$@) $@
	
%.o: %.cu
	$(NVCC) $(NVCCFLAGS) -c $< -o $@
	
clean:
	rm -f *.o *.d test_onerank test_halo test_logger test_cells test_dpd test_redist
	
.PHONY: clean default


ifneq "$(MAKECMDGOALS)" "clean"
-include $(patsubst %.cu,%.d,$(notdir $(wildcard $(addsuffix /*.cu,$(SRC_DIR)))))
endif